static float4 _3474;
static float3 _3547;
static float4 _3621[4];
static uint _4116;

cbuffer t_UBO : register(b0, space0)
{
    row_major float4 t_ubo_projection[4] : packoffset(c0);
    row_major float4 t_ubo_model[4] : packoffset(c4);
    row_major float4 t_ubo_view[4] : packoffset(c8);
    row_major float3 t_ubo_cam_pos : packoffset(c12);
};

cbuffer t_UBOShared : register(b1, space0)
{
    row_major float4 t_ubo_params_lights[4] : packoffset(c0);
};

cbuffer t_MaterialParams : register(b2, space0)
{
    row_major float t_material_roughness : packoffset(c0);
    row_major float t_material_metallic : packoffset(c0.y);
    row_major float t_material_r : packoffset(c0.z);
    row_major float t_material_g : packoffset(c0.w);
    row_major float t_material_b : packoffset(c1);
};

cbuffer t_ObjectParams : register(b3, space0)
{
    row_major float3 t_object_position : packoffset(c0);
};


static float4 gl_Position;
static float3 t_position;
static float3 t_normal;
static float4 t_vert_out_frag_pos;
static float3 t_vert_out_normal;

struct SPIRV_Cross_Input
{
    float3 t_position : TEXCOORD0;
    float3 t_normal : TEXCOORD1;
};

struct SPIRV_Cross_Output
{
    float4 t_vert_out_frag_pos : TEXCOORD0;
    float3 t_vert_out_normal : TEXCOORD1;
    float4 gl_Position : SV_Position;
};

void initializer_of_anon_2314(out ??? _4467[27])
{
    ??? _671[27];
    _671[0u] = ???(79);
    _671[1u] = ???(112);
    _671[2u] = ???(68);
    _671[3u] = ???(101);
    _671[4u] = ???(99);
    _671[5u] = ???(111);
    _671[6u] = ???(114);
    _671[7u] = ???(97);
    _671[8u] = ???(116);
    _671[9u] = ???(101);
    _671[10u] = ???(32);
    _671[11u] = ???(37);
    _671[12u] = ???(112);
    _671[13u] = ???(116);
    _671[14u] = ???(114);
    _671[15u] = ???(32);
    _671[16u] = ???(76);
    _671[17u] = ???(111);
    _671[18u] = ???(99);
    _671[19u] = ???(97);
    _671[20u] = ???(116);
    _671[21u] = ???(105);
    _671[22u] = ???(111);
    _671[23u] = ???(110);
    _671[24u] = ???(32);
    _671[25u] = ???(48);
    _671[26u] = ???(0);
    _4467 = _671;
}

void initializer_of_anon_2452(out ??? _4469[27])
{
    ??? _762[27];
    _762[0u] = ???(79);
    _762[1u] = ???(112);
    _762[2u] = ???(68);
    _762[3u] = ???(101);
    _762[4u] = ???(99);
    _762[5u] = ???(111);
    _762[6u] = ???(114);
    _762[7u] = ???(97);
    _762[8u] = ???(116);
    _762[9u] = ???(101);
    _762[10u] = ???(32);
    _762[11u] = ???(37);
    _762[12u] = ???(112);
    _762[13u] = ???(116);
    _762[14u] = ???(114);
    _762[15u] = ???(32);
    _762[16u] = ???(76);
    _762[17u] = ???(111);
    _762[18u] = ???(99);
    _762[19u] = ???(97);
    _762[20u] = ???(116);
    _762[21u] = ???(105);
    _762[22u] = ???(111);
    _762[23u] = ???(110);
    _762[24u] = ???(32);
    _762[25u] = ???(49);
    _762[26u] = ???(0);
    _4469 = _762;
}

void initializer_of_anon_2696(out ??? _4475[29])
{
    ??? _870[29];
    _870[0u] = ???(79);
    _870[1u] = ???(112);
    _870[2u] = ???(68);
    _870[3u] = ???(101);
    _870[4u] = ???(99);
    _870[5u] = ???(111);
    _870[6u] = ???(114);
    _870[7u] = ???(97);
    _870[8u] = ???(116);
    _870[9u] = ???(101);
    _870[10u] = ???(32);
    _870[11u] = ???(37);
    _870[12u] = ???(84);
    _870[13u] = ???(32);
    _870[14u] = ???(65);
    _870[15u] = ???(114);
    _870[16u] = ???(114);
    _870[17u] = ???(97);
    _870[18u] = ???(121);
    _870[19u] = ???(83);
    _870[20u] = ???(116);
    _870[21u] = ???(114);
    _870[22u] = ???(105);
    _870[23u] = ???(100);
    _870[24u] = ???(101);
    _870[25u] = ???(32);
    _870[26u] = ???(49);
    _870[27u] = ???(54);
    _870[28u] = ???(0);
    _4475 = _870;
}

void initializer_of_anon_2935(out ??? _4478[31])
{
    ??? _976[31];
    _976[0u] = ???(79);
    _976[1u] = ???(112);
    _976[2u] = ???(77);
    _976[3u] = ???(101);
    _976[4u] = ???(109);
    _976[5u] = ???(98);
    _976[6u] = ???(101);
    _976[7u] = ???(114);
    _976[8u] = ???(68);
    _976[9u] = ???(101);
    _976[10u] = ???(99);
    _976[11u] = ???(111);
    _976[12u] = ???(114);
    _976[13u] = ???(97);
    _976[14u] = ???(116);
    _976[15u] = ???(101);
    _976[16u] = ???(32);
    _976[17u] = ???(37);
    _976[18u] = ???(84);
    _976[19u] = ???(32);
    _976[20u] = ???(48);
    _976[21u] = ???(32);
    _976[22u] = ???(79);
    _976[23u] = ???(102);
    _976[24u] = ???(102);
    _976[25u] = ???(115);
    _976[26u] = ???(101);
    _976[27u] = ???(116);
    _976[28u] = ???(32);
    _976[29u] = ???(48);
    _976[30u] = ???(0);
    _4478 = _976;
}

void initializer_of_anon_2995(out ??? _4481[32])
{
    ??? _1084[32];
    _1084[0u] = ???(79);
    _1084[1u] = ???(112);
    _1084[2u] = ???(77);
    _1084[3u] = ???(101);
    _1084[4u] = ???(109);
    _1084[5u] = ???(98);
    _1084[6u] = ???(101);
    _1084[7u] = ???(114);
    _1084[8u] = ???(68);
    _1084[9u] = ???(101);
    _1084[10u] = ???(99);
    _1084[11u] = ???(111);
    _1084[12u] = ???(114);
    _1084[13u] = ???(97);
    _1084[14u] = ???(116);
    _1084[15u] = ???(101);
    _1084[16u] = ???(32);
    _1084[17u] = ???(37);
    _1084[18u] = ???(84);
    _1084[19u] = ???(32);
    _1084[20u] = ???(49);
    _1084[21u] = ???(32);
    _1084[22u] = ???(79);
    _1084[23u] = ???(102);
    _1084[24u] = ???(102);
    _1084[25u] = ???(115);
    _1084[26u] = ???(101);
    _1084[27u] = ???(116);
    _1084[28u] = ???(32);
    _1084[29u] = ???(54);
    _1084[30u] = ???(52);
    _1084[31u] = ???(0);
    _4481 = _1084;
}

void initializer_of_anon_3068(out ??? _4484[33])
{
    ??? _1195[33];
    _1195[0u] = ???(79);
    _1195[1u] = ???(112);
    _1195[2u] = ???(77);
    _1195[3u] = ???(101);
    _1195[4u] = ???(109);
    _1195[5u] = ???(98);
    _1195[6u] = ???(101);
    _1195[7u] = ???(114);
    _1195[8u] = ???(68);
    _1195[9u] = ???(101);
    _1195[10u] = ???(99);
    _1195[11u] = ???(111);
    _1195[12u] = ???(114);
    _1195[13u] = ???(97);
    _1195[14u] = ???(116);
    _1195[15u] = ???(101);
    _1195[16u] = ???(32);
    _1195[17u] = ???(37);
    _1195[18u] = ???(84);
    _1195[19u] = ???(32);
    _1195[20u] = ???(50);
    _1195[21u] = ???(32);
    _1195[22u] = ???(79);
    _1195[23u] = ???(102);
    _1195[24u] = ???(102);
    _1195[25u] = ???(115);
    _1195[26u] = ???(101);
    _1195[27u] = ???(116);
    _1195[28u] = ???(32);
    _1195[29u] = ???(49);
    _1195[30u] = ???(50);
    _1195[31u] = ???(56);
    _1195[32u] = ???(0);
    _4484 = _1195;
}

void initializer_of_anon_3105(out ??? _4486[33])
{
    ??? _1304[33];
    _1304[0u] = ???(79);
    _1304[1u] = ???(112);
    _1304[2u] = ???(77);
    _1304[3u] = ???(101);
    _1304[4u] = ???(109);
    _1304[5u] = ???(98);
    _1304[6u] = ???(101);
    _1304[7u] = ???(114);
    _1304[8u] = ???(68);
    _1304[9u] = ???(101);
    _1304[10u] = ???(99);
    _1304[11u] = ???(111);
    _1304[12u] = ???(114);
    _1304[13u] = ???(97);
    _1304[14u] = ???(116);
    _1304[15u] = ???(101);
    _1304[16u] = ???(32);
    _1304[17u] = ???(37);
    _1304[18u] = ???(84);
    _1304[19u] = ???(32);
    _1304[20u] = ???(51);
    _1304[21u] = ???(32);
    _1304[22u] = ???(79);
    _1304[23u] = ???(102);
    _1304[24u] = ???(102);
    _1304[25u] = ???(115);
    _1304[26u] = ???(101);
    _1304[27u] = ???(116);
    _1304[28u] = ???(32);
    _1304[29u] = ???(49);
    _1304[30u] = ???(57);
    _1304[31u] = ???(50);
    _1304[32u] = ???(0);
    _4486 = _1304;
}

void initializer_of_anon_3223(out ??? _4489[38])
{
    ??? _1422[38];
    _1422[0u] = ???(79);
    _1422[1u] = ???(112);
    _1422[2u] = ???(77);
    _1422[3u] = ???(101);
    _1422[4u] = ???(109);
    _1422[5u] = ???(98);
    _1422[6u] = ???(101);
    _1422[7u] = ???(114);
    _1422[8u] = ???(68);
    _1422[9u] = ???(101);
    _1422[10u] = ???(99);
    _1422[11u] = ???(111);
    _1422[12u] = ???(114);
    _1422[13u] = ???(97);
    _1422[14u] = ???(116);
    _1422[15u] = ???(101);
    _1422[16u] = ???(32);
    _1422[17u] = ???(37);
    _1422[18u] = ???(84);
    _1422[19u] = ???(32);
    _1422[20u] = ???(48);
    _1422[21u] = ???(32);
    _1422[22u] = ???(77);
    _1422[23u] = ???(97);
    _1422[24u] = ???(116);
    _1422[25u] = ???(114);
    _1422[26u] = ???(105);
    _1422[27u] = ???(120);
    _1422[28u] = ???(83);
    _1422[29u] = ???(116);
    _1422[30u] = ???(114);
    _1422[31u] = ???(105);
    _1422[32u] = ???(100);
    _1422[33u] = ???(101);
    _1422[34u] = ???(32);
    _1422[35u] = ???(49);
    _1422[36u] = ???(54);
    _1422[37u] = ???(0);
    _4489 = _1422;
}

void initializer_of_anon_3243(out ??? _4491[38])
{
    ??? _1546[38];
    _1546[0u] = ???(79);
    _1546[1u] = ???(112);
    _1546[2u] = ???(77);
    _1546[3u] = ???(101);
    _1546[4u] = ???(109);
    _1546[5u] = ???(98);
    _1546[6u] = ???(101);
    _1546[7u] = ???(114);
    _1546[8u] = ???(68);
    _1546[9u] = ???(101);
    _1546[10u] = ???(99);
    _1546[11u] = ???(111);
    _1546[12u] = ???(114);
    _1546[13u] = ???(97);
    _1546[14u] = ???(116);
    _1546[15u] = ???(101);
    _1546[16u] = ???(32);
    _1546[17u] = ???(37);
    _1546[18u] = ???(84);
    _1546[19u] = ???(32);
    _1546[20u] = ???(49);
    _1546[21u] = ???(32);
    _1546[22u] = ???(77);
    _1546[23u] = ???(97);
    _1546[24u] = ???(116);
    _1546[25u] = ???(114);
    _1546[26u] = ???(105);
    _1546[27u] = ???(120);
    _1546[28u] = ???(83);
    _1546[29u] = ???(116);
    _1546[30u] = ???(114);
    _1546[31u] = ???(105);
    _1546[32u] = ???(100);
    _1546[33u] = ???(101);
    _1546[34u] = ???(32);
    _1546[35u] = ???(49);
    _1546[36u] = ???(54);
    _1546[37u] = ???(0);
    _4491 = _1546;
}

void initializer_of_anon_3261(out ??? _4493[38])
{
    ??? _1670[38];
    _1670[0u] = ???(79);
    _1670[1u] = ???(112);
    _1670[2u] = ???(77);
    _1670[3u] = ???(101);
    _1670[4u] = ???(109);
    _1670[5u] = ???(98);
    _1670[6u] = ???(101);
    _1670[7u] = ???(114);
    _1670[8u] = ???(68);
    _1670[9u] = ???(101);
    _1670[10u] = ???(99);
    _1670[11u] = ???(111);
    _1670[12u] = ???(114);
    _1670[13u] = ???(97);
    _1670[14u] = ???(116);
    _1670[15u] = ???(101);
    _1670[16u] = ???(32);
    _1670[17u] = ???(37);
    _1670[18u] = ???(84);
    _1670[19u] = ???(32);
    _1670[20u] = ???(50);
    _1670[21u] = ???(32);
    _1670[22u] = ???(77);
    _1670[23u] = ???(97);
    _1670[24u] = ???(116);
    _1670[25u] = ???(114);
    _1670[26u] = ???(105);
    _1670[27u] = ???(120);
    _1670[28u] = ???(83);
    _1670[29u] = ???(116);
    _1670[30u] = ???(114);
    _1670[31u] = ???(105);
    _1670[32u] = ???(100);
    _1670[33u] = ???(101);
    _1670[34u] = ???(32);
    _1670[35u] = ???(49);
    _1670[36u] = ???(54);
    _1670[37u] = ???(0);
    _4493 = _1670;
}

void initializer_of_anon_3418(out ??? _4495[31])
{
    ??? _1787[31];
    _1787[0u] = ???(79);
    _1787[1u] = ???(112);
    _1787[2u] = ???(77);
    _1787[3u] = ???(101);
    _1787[4u] = ???(109);
    _1787[5u] = ???(98);
    _1787[6u] = ???(101);
    _1787[7u] = ???(114);
    _1787[8u] = ???(68);
    _1787[9u] = ???(101);
    _1787[10u] = ???(99);
    _1787[11u] = ???(111);
    _1787[12u] = ???(114);
    _1787[13u] = ???(97);
    _1787[14u] = ???(116);
    _1787[15u] = ???(101);
    _1787[16u] = ???(32);
    _1787[17u] = ???(37);
    _1787[18u] = ???(84);
    _1787[19u] = ???(32);
    _1787[20u] = ???(48);
    _1787[21u] = ???(32);
    _1787[22u] = ???(67);
    _1787[23u] = ???(111);
    _1787[24u] = ???(108);
    _1787[25u] = ???(77);
    _1787[26u] = ???(97);
    _1787[27u] = ???(106);
    _1787[28u] = ???(111);
    _1787[29u] = ???(114);
    _1787[30u] = ???(0);
    _4495 = _1787;
}

void initializer_of_anon_3427(out ??? _4497[31])
{
    ??? _1890[31];
    _1890[0u] = ???(79);
    _1890[1u] = ???(112);
    _1890[2u] = ???(77);
    _1890[3u] = ???(101);
    _1890[4u] = ???(109);
    _1890[5u] = ???(98);
    _1890[6u] = ???(101);
    _1890[7u] = ???(114);
    _1890[8u] = ???(68);
    _1890[9u] = ???(101);
    _1890[10u] = ???(99);
    _1890[11u] = ???(111);
    _1890[12u] = ???(114);
    _1890[13u] = ???(97);
    _1890[14u] = ???(116);
    _1890[15u] = ???(101);
    _1890[16u] = ???(32);
    _1890[17u] = ???(37);
    _1890[18u] = ???(84);
    _1890[19u] = ???(32);
    _1890[20u] = ???(49);
    _1890[21u] = ???(32);
    _1890[22u] = ???(67);
    _1890[23u] = ???(111);
    _1890[24u] = ???(108);
    _1890[25u] = ???(77);
    _1890[26u] = ???(97);
    _1890[27u] = ???(106);
    _1890[28u] = ???(111);
    _1890[29u] = ???(114);
    _1890[30u] = ???(0);
    _4497 = _1890;
}

void initializer_of_anon_3443(out ??? _4499[31])
{
    ??? _1993[31];
    _1993[0u] = ???(79);
    _1993[1u] = ???(112);
    _1993[2u] = ???(77);
    _1993[3u] = ???(101);
    _1993[4u] = ???(109);
    _1993[5u] = ???(98);
    _1993[6u] = ???(101);
    _1993[7u] = ???(114);
    _1993[8u] = ???(68);
    _1993[9u] = ???(101);
    _1993[10u] = ???(99);
    _1993[11u] = ???(111);
    _1993[12u] = ???(114);
    _1993[13u] = ???(97);
    _1993[14u] = ???(116);
    _1993[15u] = ???(101);
    _1993[16u] = ???(32);
    _1993[17u] = ???(37);
    _1993[18u] = ???(84);
    _1993[19u] = ???(32);
    _1993[20u] = ???(50);
    _1993[21u] = ???(32);
    _1993[22u] = ???(67);
    _1993[23u] = ???(111);
    _1993[24u] = ???(108);
    _1993[25u] = ???(77);
    _1993[26u] = ???(97);
    _1993[27u] = ???(106);
    _1993[28u] = ???(111);
    _1993[29u] = ???(114);
    _1993[30u] = ???(0);
    _4499 = _1993;
}

void initializer_of_anon_3459(out ??? _4501[31])
{
    ??? _2096[31];
    _2096[0u] = ???(79);
    _2096[1u] = ???(112);
    _2096[2u] = ???(77);
    _2096[3u] = ???(101);
    _2096[4u] = ???(109);
    _2096[5u] = ???(98);
    _2096[6u] = ???(101);
    _2096[7u] = ???(114);
    _2096[8u] = ???(68);
    _2096[9u] = ???(101);
    _2096[10u] = ???(99);
    _2096[11u] = ???(111);
    _2096[12u] = ???(114);
    _2096[13u] = ???(97);
    _2096[14u] = ???(116);
    _2096[15u] = ???(101);
    _2096[16u] = ???(32);
    _2096[17u] = ???(37);
    _2096[18u] = ???(84);
    _2096[19u] = ???(32);
    _2096[20u] = ???(51);
    _2096[21u] = ???(32);
    _2096[22u] = ???(67);
    _2096[23u] = ???(111);
    _2096[24u] = ???(108);
    _2096[25u] = ???(77);
    _2096[26u] = ???(97);
    _2096[27u] = ???(106);
    _2096[28u] = ???(111);
    _2096[29u] = ???(114);
    _2096[30u] = ???(0);
    _4501 = _2096;
}

void initializer_of_anon_3517(out ??? _4504[31])
{
    ??? _2206[31];
    _2206[0u] = ???(79);
    _2206[1u] = ???(112);
    _2206[2u] = ???(77);
    _2206[3u] = ???(101);
    _2206[4u] = ???(109);
    _2206[5u] = ???(98);
    _2206[6u] = ???(101);
    _2206[7u] = ???(114);
    _2206[8u] = ???(68);
    _2206[9u] = ???(101);
    _2206[10u] = ???(99);
    _2206[11u] = ???(111);
    _2206[12u] = ???(114);
    _2206[13u] = ???(97);
    _2206[14u] = ???(116);
    _2206[15u] = ???(101);
    _2206[16u] = ???(32);
    _2206[17u] = ???(37);
    _2206[18u] = ???(84);
    _2206[19u] = ???(32);
    _2206[20u] = ???(49);
    _2206[21u] = ???(32);
    _2206[22u] = ???(79);
    _2206[23u] = ???(102);
    _2206[24u] = ???(102);
    _2206[25u] = ???(115);
    _2206[26u] = ???(101);
    _2206[27u] = ???(116);
    _2206[28u] = ???(32);
    _2206[29u] = ???(52);
    _2206[30u] = ???(0);
    _4504 = _2206;
}

void initializer_of_anon_3539(out ??? _4506[31])
{
    ??? _2309[31];
    _2309[0u] = ???(79);
    _2309[1u] = ???(112);
    _2309[2u] = ???(77);
    _2309[3u] = ???(101);
    _2309[4u] = ???(109);
    _2309[5u] = ???(98);
    _2309[6u] = ???(101);
    _2309[7u] = ???(114);
    _2309[8u] = ???(68);
    _2309[9u] = ???(101);
    _2309[10u] = ???(99);
    _2309[11u] = ???(111);
    _2309[12u] = ???(114);
    _2309[13u] = ???(97);
    _2309[14u] = ???(116);
    _2309[15u] = ???(101);
    _2309[16u] = ???(32);
    _2309[17u] = ???(37);
    _2309[18u] = ???(84);
    _2309[19u] = ???(32);
    _2309[20u] = ???(50);
    _2309[21u] = ???(32);
    _2309[22u] = ???(79);
    _2309[23u] = ???(102);
    _2309[24u] = ???(102);
    _2309[25u] = ???(115);
    _2309[26u] = ???(101);
    _2309[27u] = ???(116);
    _2309[28u] = ???(32);
    _2309[29u] = ???(56);
    _2309[30u] = ???(0);
    _4506 = _2309;
}

void initializer_of_anon_3566(out ??? _4508[32])
{
    ??? _2413[32];
    _2413[0u] = ???(79);
    _2413[1u] = ???(112);
    _2413[2u] = ???(77);
    _2413[3u] = ???(101);
    _2413[4u] = ???(109);
    _2413[5u] = ???(98);
    _2413[6u] = ???(101);
    _2413[7u] = ???(114);
    _2413[8u] = ???(68);
    _2413[9u] = ???(101);
    _2413[10u] = ???(99);
    _2413[11u] = ???(111);
    _2413[12u] = ???(114);
    _2413[13u] = ???(97);
    _2413[14u] = ???(116);
    _2413[15u] = ???(101);
    _2413[16u] = ???(32);
    _2413[17u] = ???(37);
    _2413[18u] = ???(84);
    _2413[19u] = ???(32);
    _2413[20u] = ???(51);
    _2413[21u] = ???(32);
    _2413[22u] = ???(79);
    _2413[23u] = ???(102);
    _2413[24u] = ???(102);
    _2413[25u] = ???(115);
    _2413[26u] = ???(101);
    _2413[27u] = ???(116);
    _2413[28u] = ???(32);
    _2413[29u] = ???(49);
    _2413[30u] = ???(50);
    _2413[31u] = ???(0);
    _4508 = _2413;
}

void initializer_of_anon_3585(out ??? _4510[32])
{
    ??? _2519[32];
    _2519[0u] = ???(79);
    _2519[1u] = ???(112);
    _2519[2u] = ???(77);
    _2519[3u] = ???(101);
    _2519[4u] = ???(109);
    _2519[5u] = ???(98);
    _2519[6u] = ???(101);
    _2519[7u] = ???(114);
    _2519[8u] = ???(68);
    _2519[9u] = ???(101);
    _2519[10u] = ???(99);
    _2519[11u] = ???(111);
    _2519[12u] = ???(114);
    _2519[13u] = ???(97);
    _2519[14u] = ???(116);
    _2519[15u] = ???(101);
    _2519[16u] = ???(32);
    _2519[17u] = ???(37);
    _2519[18u] = ???(84);
    _2519[19u] = ???(32);
    _2519[20u] = ???(52);
    _2519[21u] = ???(32);
    _2519[22u] = ???(79);
    _2519[23u] = ???(102);
    _2519[24u] = ???(102);
    _2519[25u] = ???(115);
    _2519[26u] = ???(101);
    _2519[27u] = ???(116);
    _2519[28u] = ???(32);
    _2519[29u] = ???(49);
    _2519[30u] = ???(54);
    _2519[31u] = ???(0);
    _4510 = _2519;
}

void initializer_of_anon_3602(out ??? _4516[31])
{
    ??? _2640[31];
    _2640[0u] = ???(79);
    _2640[1u] = ???(112);
    _2640[2u] = ???(77);
    _2640[3u] = ???(101);
    _2640[4u] = ???(109);
    _2640[5u] = ???(98);
    _2640[6u] = ???(101);
    _2640[7u] = ???(114);
    _2640[8u] = ???(68);
    _2640[9u] = ???(101);
    _2640[10u] = ???(99);
    _2640[11u] = ???(111);
    _2640[12u] = ???(114);
    _2640[13u] = ???(97);
    _2640[14u] = ???(116);
    _2640[15u] = ???(101);
    _2640[16u] = ???(32);
    _2640[17u] = ???(37);
    _2640[18u] = ???(84);
    _2640[19u] = ???(32);
    _2640[20u] = ???(52);
    _2640[21u] = ???(32);
    _2640[22u] = ???(67);
    _2640[23u] = ???(111);
    _2640[24u] = ???(108);
    _2640[25u] = ???(77);
    _2640[26u] = ???(97);
    _2640[27u] = ???(106);
    _2640[28u] = ???(111);
    _2640[29u] = ???(114);
    _2640[30u] = ???(0);
    _4516 = _2640;
}

void initializer_of_anon_3761(out ??? _4523[58])
{
    ??? _2796[58];
    _2796[0u] = ???(79);
    _2796[1u] = ???(112);
    _2796[2u] = ???(68);
    _2796[3u] = ???(101);
    _2796[4u] = ???(99);
    _2796[5u] = ???(111);
    _2796[6u] = ???(114);
    _2796[7u] = ???(97);
    _2796[8u] = ???(116);
    _2796[9u] = ???(101);
    _2796[10u] = ???(32);
    _2796[11u] = ???(37);
    _2796[12u] = ???(112);
    _2796[13u] = ???(116);
    _2796[14u] = ???(114);
    _2796[15u] = ???(32);
    _2796[16u] = ???(68);
    _2796[17u] = ???(101);
    _2796[18u] = ???(115);
    _2796[19u] = ???(99);
    _2796[20u] = ???(114);
    _2796[21u] = ???(105);
    _2796[22u] = ???(112);
    _2796[23u] = ???(116);
    _2796[24u] = ???(111);
    _2796[25u] = ???(114);
    _2796[26u] = ???(83);
    _2796[27u] = ???(101);
    _2796[28u] = ???(116);
    _2796[29u] = ???(32);
    _2796[30u] = ???(48);
    _2796[31u] = ???(10);
    _2796[32u] = ???(79);
    _2796[33u] = ???(112);
    _2796[34u] = ???(68);
    _2796[35u] = ???(101);
    _2796[36u] = ???(99);
    _2796[37u] = ???(111);
    _2796[38u] = ???(114);
    _2796[39u] = ???(97);
    _2796[40u] = ???(116);
    _2796[41u] = ???(101);
    _2796[42u] = ???(32);
    _2796[43u] = ???(37);
    _2796[44u] = ???(112);
    _2796[45u] = ???(116);
    _2796[46u] = ???(114);
    _2796[47u] = ???(32);
    _2796[48u] = ???(66);
    _2796[49u] = ???(105);
    _2796[50u] = ???(110);
    _2796[51u] = ???(100);
    _2796[52u] = ???(105);
    _2796[53u] = ???(110);
    _2796[54u] = ???(103);
    _2796[55u] = ???(32);
    _2796[56u] = ???(48);
    _2796[57u] = ???(0);
    _4523 = _2796;
}

void initializer_of_anon_3782(out ??? _4525[58])
{
    ??? _2980[58];
    _2980[0u] = ???(79);
    _2980[1u] = ???(112);
    _2980[2u] = ???(68);
    _2980[3u] = ???(101);
    _2980[4u] = ???(99);
    _2980[5u] = ???(111);
    _2980[6u] = ???(114);
    _2980[7u] = ???(97);
    _2980[8u] = ???(116);
    _2980[9u] = ???(101);
    _2980[10u] = ???(32);
    _2980[11u] = ???(37);
    _2980[12u] = ???(112);
    _2980[13u] = ???(116);
    _2980[14u] = ???(114);
    _2980[15u] = ???(32);
    _2980[16u] = ???(68);
    _2980[17u] = ???(101);
    _2980[18u] = ???(115);
    _2980[19u] = ???(99);
    _2980[20u] = ???(114);
    _2980[21u] = ???(105);
    _2980[22u] = ???(112);
    _2980[23u] = ???(116);
    _2980[24u] = ???(111);
    _2980[25u] = ???(114);
    _2980[26u] = ???(83);
    _2980[27u] = ???(101);
    _2980[28u] = ???(116);
    _2980[29u] = ???(32);
    _2980[30u] = ???(48);
    _2980[31u] = ???(10);
    _2980[32u] = ???(79);
    _2980[33u] = ???(112);
    _2980[34u] = ???(68);
    _2980[35u] = ???(101);
    _2980[36u] = ???(99);
    _2980[37u] = ???(111);
    _2980[38u] = ???(114);
    _2980[39u] = ???(97);
    _2980[40u] = ???(116);
    _2980[41u] = ???(101);
    _2980[42u] = ???(32);
    _2980[43u] = ???(37);
    _2980[44u] = ???(112);
    _2980[45u] = ???(116);
    _2980[46u] = ???(114);
    _2980[47u] = ???(32);
    _2980[48u] = ???(66);
    _2980[49u] = ???(105);
    _2980[50u] = ???(110);
    _2980[51u] = ???(100);
    _2980[52u] = ???(105);
    _2980[53u] = ???(110);
    _2980[54u] = ???(103);
    _2980[55u] = ???(32);
    _2980[56u] = ???(49);
    _2980[57u] = ???(0);
    _4525 = _2980;
}

void initializer_of_anon_3801(out ??? _4527[58])
{
    ??? _3164[58];
    _3164[0u] = ???(79);
    _3164[1u] = ???(112);
    _3164[2u] = ???(68);
    _3164[3u] = ???(101);
    _3164[4u] = ???(99);
    _3164[5u] = ???(111);
    _3164[6u] = ???(114);
    _3164[7u] = ???(97);
    _3164[8u] = ???(116);
    _3164[9u] = ???(101);
    _3164[10u] = ???(32);
    _3164[11u] = ???(37);
    _3164[12u] = ???(112);
    _3164[13u] = ???(116);
    _3164[14u] = ???(114);
    _3164[15u] = ???(32);
    _3164[16u] = ???(68);
    _3164[17u] = ???(101);
    _3164[18u] = ???(115);
    _3164[19u] = ???(99);
    _3164[20u] = ???(114);
    _3164[21u] = ???(105);
    _3164[22u] = ???(112);
    _3164[23u] = ???(116);
    _3164[24u] = ???(111);
    _3164[25u] = ???(114);
    _3164[26u] = ???(83);
    _3164[27u] = ???(101);
    _3164[28u] = ???(116);
    _3164[29u] = ???(32);
    _3164[30u] = ???(48);
    _3164[31u] = ???(10);
    _3164[32u] = ???(79);
    _3164[33u] = ???(112);
    _3164[34u] = ???(68);
    _3164[35u] = ???(101);
    _3164[36u] = ???(99);
    _3164[37u] = ???(111);
    _3164[38u] = ???(114);
    _3164[39u] = ???(97);
    _3164[40u] = ???(116);
    _3164[41u] = ???(101);
    _3164[42u] = ???(32);
    _3164[43u] = ???(37);
    _3164[44u] = ???(112);
    _3164[45u] = ???(116);
    _3164[46u] = ???(114);
    _3164[47u] = ???(32);
    _3164[48u] = ???(66);
    _3164[49u] = ???(105);
    _3164[50u] = ???(110);
    _3164[51u] = ???(100);
    _3164[52u] = ???(105);
    _3164[53u] = ???(110);
    _3164[54u] = ???(103);
    _3164[55u] = ???(32);
    _3164[56u] = ???(50);
    _3164[57u] = ???(0);
    _4527 = _3164;
}

void initializer_of_anon_3820(out ??? _4529[58])
{
    ??? _3348[58];
    _3348[0u] = ???(79);
    _3348[1u] = ???(112);
    _3348[2u] = ???(68);
    _3348[3u] = ???(101);
    _3348[4u] = ???(99);
    _3348[5u] = ???(111);
    _3348[6u] = ???(114);
    _3348[7u] = ???(97);
    _3348[8u] = ???(116);
    _3348[9u] = ???(101);
    _3348[10u] = ???(32);
    _3348[11u] = ???(37);
    _3348[12u] = ???(112);
    _3348[13u] = ???(116);
    _3348[14u] = ???(114);
    _3348[15u] = ???(32);
    _3348[16u] = ???(68);
    _3348[17u] = ???(101);
    _3348[18u] = ???(115);
    _3348[19u] = ???(99);
    _3348[20u] = ???(114);
    _3348[21u] = ???(105);
    _3348[22u] = ???(112);
    _3348[23u] = ???(116);
    _3348[24u] = ???(111);
    _3348[25u] = ???(114);
    _3348[26u] = ???(83);
    _3348[27u] = ???(101);
    _3348[28u] = ???(116);
    _3348[29u] = ???(32);
    _3348[30u] = ???(48);
    _3348[31u] = ???(10);
    _3348[32u] = ???(79);
    _3348[33u] = ???(112);
    _3348[34u] = ???(68);
    _3348[35u] = ???(101);
    _3348[36u] = ???(99);
    _3348[37u] = ???(111);
    _3348[38u] = ???(114);
    _3348[39u] = ???(97);
    _3348[40u] = ???(116);
    _3348[41u] = ???(101);
    _3348[42u] = ???(32);
    _3348[43u] = ???(37);
    _3348[44u] = ???(112);
    _3348[45u] = ???(116);
    _3348[46u] = ???(114);
    _3348[47u] = ???(32);
    _3348[48u] = ???(66);
    _3348[49u] = ???(105);
    _3348[50u] = ???(110);
    _3348[51u] = ???(100);
    _3348[52u] = ???(105);
    _3348[53u] = ???(110);
    _3348[54u] = ???(103);
    _3348[55u] = ???(32);
    _3348[56u] = ???(51);
    _3348[57u] = ???(0);
    _4529 = _3348;
}

void gpu_location_anon_919(??? _4468[27])
{
}

void gpu_location_anon_920(??? _4470[27])
{
}

void gpu_location_anon_921(??? _4471[27])
{
}

void gpu_location_anon_922(??? _4472[27])
{
}

void gpu_position_anon_923()
{
}

void gpu_arrayStride_anon_924(??? _4476[29])
{
}

void gpu_block_anon_926()
{
}

void gpu_memberOffset_anon_927(??? _4479[31])
{
}

void gpu_memberOffset_anon_928(??? _4482[32])
{
}

void gpu_memberOffset_anon_929(??? _4485[33])
{
}

void gpu_memberOffset_anon_930(??? _4487[33])
{
}

void gpu_matrixStride_anon_931(??? _4490[38])
{
}

void gpu_matrixStride_anon_932(??? _4492[38])
{
}

void gpu_matrixStride_anon_933(??? _4494[38])
{
}

void gpu_colMajor_anon_934(??? _4496[31])
{
}

void gpu_colMajor_anon_935(??? _4498[31])
{
}

void gpu_colMajor_anon_936(??? _4500[31])
{
}

void gpu_colMajor_anon_937(??? _4502[31])
{
}

void gpu_block_anon_939()
{
}

void gpu_memberOffset_anon_940(??? _4503[31])
{
}

void gpu_memberOffset_anon_941(??? _4505[31])
{
}

void gpu_memberOffset_anon_942(??? _4507[31])
{
}

void gpu_memberOffset_anon_943(??? _4509[32])
{
}

void gpu_memberOffset_anon_944(??? _4511[32])
{
}

void gpu_colMajor_anon_945(??? _4512[31])
{
}

void gpu_colMajor_anon_946(??? _4513[31])
{
}

void gpu_colMajor_anon_947(??? _4514[31])
{
}

void gpu_colMajor_anon_948(??? _4515[31])
{
}

void gpu_colMajor_anon_949(??? _4517[31])
{
}

void gpu_block_anon_951()
{
}

void gpu_memberOffset_anon_952(??? _4518[31])
{
}

void gpu_colMajor_anon_953(??? _4519[31])
{
}

void gpu_block_anon_955()
{
}

void gpu_memberOffset_anon_956(??? _4520[31])
{
}

void gpu_colMajor_anon_957(??? _4521[31])
{
}

void gpu_binding_anon_958(??? _4524[58])
{
}

void gpu_binding_anon_959(??? _4526[58])
{
}

void gpu_binding_anon_960(??? _4528[58])
{
}

void gpu_binding_anon_961(??? _4530[58])
{
}

float4 t_mat4x4MulVec(float4 _3470[4], float4 _3471)
{
    float4 result = _3474;
    uint64_t _3475 = 0ull;
    uint _3535;
    for (;;)
    {
        uint _3529;
        if (_3475 < 4ull)
        {
            uint64_t _3485 = 0ull;
            uint _3518;
            for (;;)
            {
                uint _3512;
                if (_3485 < 4ull)
                {
                    float4 _3497[4] = _3470;
                    float4 _3500 = _3497[_3475];
                    float4 _3503 = _3471;
                    result[_3485] += (_3500[_3485] * _3503[_3475]);
                    _3512 = 23u;
                }
                else
                {
                    _3512 = 20u;
                }
                if (_3512 == 23u)
                {
                    _3485 += 1ull;
                    continue;
                }
                else
                {
                    _3518 = _3512;
                    break;
                }
            }
            uint _3526;
            if (_3518 == 20u)
            {
                _3526 = 13u;
            }
            else
            {
                _3526 = _3518;
            }
            _3529 = _3526;
        }
        else
        {
            _3529 = 10u;
        }
        if (_3529 == 13u)
        {
            _3475 += 1ull;
            continue;
        }
        else
        {
            _3535 = _3529;
            break;
        }
    }
    if (_3535 == 10u)
    {
        return result;
    }
}

float3 t_mat3x3MulVec(float3 _3543[3], float3 _3544)
{
    float3 result = _3547;
    uint64_t _3548 = 0ull;
    uint _3609;
    for (;;)
    {
        uint _3603;
        if (_3548 < 3ull)
        {
            uint64_t _3559 = 0ull;
            uint _3592;
            for (;;)
            {
                uint _3586;
                if (_3559 < 3ull)
                {
                    float3 _3571[3] = _3543;
                    float3 _3574 = _3571[_3548];
                    float3 _3577 = _3544;
                    result[_3559] += (_3574[_3559] * _3577[_3548]);
                    _3586 = 23u;
                }
                else
                {
                    _3586 = 20u;
                }
                if (_3586 == 23u)
                {
                    _3559 += 1ull;
                    continue;
                }
                else
                {
                    _3592 = _3586;
                    break;
                }
            }
            uint _3600;
            if (_3592 == 20u)
            {
                _3600 = 13u;
            }
            else
            {
                _3600 = _3592;
            }
            _3603 = _3600;
        }
        else
        {
            _3603 = 10u;
        }
        if (_3603 == 13u)
        {
            _3548 += 1ull;
            continue;
        }
        else
        {
            _3609 = _3603;
            break;
        }
    }
    if (_3609 == 10u)
    {
        return result;
    }
}

void t_mat4x4Mul(out float4 spvReturnValue[4], float4 _3617[4], float4 _3618[4])
{
    float4 result[4] = _3621;
    uint64_t _3622 = 0ull;
    uint _3715;
    for (;;)
    {
        uint _3709;
        if (_3622 < 4ull)
        {
            uint64_t _3632 = 0ull;
            uint _3698;
            for (;;)
            {
                uint _3692;
                if (_3632 < 4ull)
                {
                    float sum = 0.0f;
                    uint64_t _3643 = 0ull;
                    uint _3678;
                    for (;;)
                    {
                        uint _3672;
                        if (_3643 < 4ull)
                        {
                            float4 _3654[4] = _3617;
                            float4 _3657 = _3654[_3643];
                            float4 _3660[4] = _3618;
                            float4 _3663 = _3660[_3632];
                            sum += (_3657[_3622] * _3663[_3643]);
                            _3672 = 37u;
                        }
                        else
                        {
                            _3672 = 34u;
                        }
                        if (_3672 == 37u)
                        {
                            _3643 += 1ull;
                            continue;
                        }
                        else
                        {
                            _3678 = _3672;
                            break;
                        }
                    }
                    uint _3689;
                    if (_3678 == 34u)
                    {
                        result[_3632][_3622] = sum;
                        _3689 = 23u;
                    }
                    else
                    {
                        _3689 = _3678;
                    }
                    _3692 = _3689;
                }
                else
                {
                    _3692 = 20u;
                }
                if (_3692 == 23u)
                {
                    _3632 += 1ull;
                    continue;
                }
                else
                {
                    _3698 = _3692;
                    break;
                }
            }
            uint _3706;
            if (_3698 == 20u)
            {
                _3706 = 13u;
            }
            else
            {
                _3706 = _3698;
            }
            _3709 = _3706;
        }
        else
        {
            _3709 = 10u;
        }
        if (_3709 == 13u)
        {
            _3622 += 1ull;
            continue;
        }
        else
        {
            _3715 = _3709;
            break;
        }
    }
    if (_3715 == 10u)
    {
        spvReturnValue = result;
        return;
    }
}

void t_vert(??? _4442[27], ??? _4443[27], ??? _4444[29], ??? _4445[31], ??? _4446[32], ??? _4447[33], ??? _4448[33], ??? _4449[38], ??? _4450[38], ??? _4451[38], ??? _4452[31], ??? _4453[31], ??? _4454[31], ??? _4455[31], ??? _4456[31], ??? _4457[31], ??? _4458[32], ??? _4459[32], ??? _4460[31], ??? _4461[58], ??? _4462[58], ??? _4463[58], ??? _4464[58])
{
    gpu_location_anon_919(_4442);
    gpu_location_anon_920(_4443);
    gpu_location_anon_921(_4442);
    gpu_location_anon_922(_4443);
    gpu_position_anon_923();
    gpu_arrayStride_anon_924(_4444);
    gpu_block_anon_926();
    gpu_memberOffset_anon_927(_4445);
    gpu_memberOffset_anon_928(_4446);
    gpu_memberOffset_anon_929(_4447);
    gpu_memberOffset_anon_930(_4448);
    gpu_matrixStride_anon_931(_4449);
    gpu_matrixStride_anon_932(_4450);
    gpu_matrixStride_anon_933(_4451);
    gpu_colMajor_anon_934(_4452);
    gpu_colMajor_anon_935(_4453);
    gpu_colMajor_anon_936(_4454);
    gpu_colMajor_anon_937(_4455);
    gpu_block_anon_939();
    gpu_memberOffset_anon_940(_4445);
    gpu_memberOffset_anon_941(_4456);
    gpu_memberOffset_anon_942(_4457);
    gpu_memberOffset_anon_943(_4458);
    gpu_memberOffset_anon_944(_4459);
    gpu_colMajor_anon_945(_4452);
    gpu_colMajor_anon_946(_4453);
    gpu_colMajor_anon_947(_4454);
    gpu_colMajor_anon_948(_4455);
    gpu_colMajor_anon_949(_4460);
    gpu_block_anon_951();
    gpu_memberOffset_anon_952(_4445);
    gpu_colMajor_anon_953(_4452);
    gpu_block_anon_955();
    gpu_memberOffset_anon_956(_4445);
    gpu_colMajor_anon_957(_4452);
    gpu_binding_anon_958(_4461);
    gpu_binding_anon_959(_4462);
    gpu_binding_anon_960(_4463);
    gpu_binding_anon_961(_4464);
    float3 _271 = t_position;
    float3 _276 = t_position;
    float3 _281 = t_position;
    float4 _286;
    _286.x = _271.x;
    _286.y = _276.y;
    _286.z = _281.z;
    _286.w = 1.0f;
    float3 _303 = t_ObjectParams(t_object_position).position;
    float3 _308 = t_ObjectParams(t_object_position).position;
    float3 _313 = t_ObjectParams(t_object_position).position;
    float4 _317;
    _317.x = _303.x;
    _317.y = _308.y;
    _317.z = _313.z;
    _317.w = 0.0f;
    t_vert_out_frag_pos = t_mat4x4MulVec(t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model, _286) + _317;
    float4 _333[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _336 = _333[0ull];
    float4 _341[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _344 = _341[0ull];
    float4 _349[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _352 = _349[0ull];
    float3 _355;
    _355.x = _336.x;
    _355.y = _344.y;
    _355.z = _352.z;
    float4 _365[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _368 = _365[1ull];
    float4 _373[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _376 = _373[1ull];
    float4 _381[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _384 = _381[1ull];
    float3 _387;
    _387.x = _368.x;
    _387.y = _376.y;
    _387.z = _384.z;
    float4 _397[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _400 = _397[2ull];
    float4 _405[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _408 = _405[2ull];
    float4 _413[4] = t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).model;
    float4 _416 = _413[2ull];
    float3 _419;
    _419.x = _400.x;
    _419.y = _408.y;
    _419.z = _416.z;
    float3 _430[3];
    _430[0u] = _355;
    _430[1u] = _387;
    _430[2u] = _419;
    t_vert_out_normal = t_mat3x3MulVec(_430, t_normal);
    float4 _448[4];
    t_mat4x4Mul(_448, t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).projection, t_UBO(t_ubo_projection, t_ubo_model, t_ubo_view, t_ubo_cam_pos).view);
    float4 _451 = t_vert_out_frag_pos;
    float4 _455 = t_vert_out_frag_pos;
    float4 _459 = t_vert_out_frag_pos;
    float4 _462;
    _462.x = _451.x;
    _462.y = _455.y;
    _462.z = _459.z;
    _462.w = 1.0f;
    gl_Position = t_mat4x4MulVec(_448, _462);
}

void vert_main()
{
    ??? _4577[27];
    initializer_of_anon_2314(_4577);
    ??? _4578[27];
    initializer_of_anon_2452(_4578);
    ??? _4579[29];
    initializer_of_anon_2696(_4579);
    ??? _4580[31];
    initializer_of_anon_2935(_4580);
    ??? _4581[32];
    initializer_of_anon_2995(_4581);
    ??? _4582[33];
    initializer_of_anon_3068(_4582);
    ??? _4583[33];
    initializer_of_anon_3105(_4583);
    ??? _4584[38];
    initializer_of_anon_3223(_4584);
    ??? _4585[38];
    initializer_of_anon_3243(_4585);
    ??? _4586[38];
    initializer_of_anon_3261(_4586);
    ??? _4587[31];
    initializer_of_anon_3418(_4587);
    ??? _4588[31];
    initializer_of_anon_3427(_4588);
    ??? _4589[31];
    initializer_of_anon_3443(_4589);
    ??? _4590[31];
    initializer_of_anon_3459(_4590);
    ??? _4591[31];
    initializer_of_anon_3517(_4591);
    ??? _4592[31];
    initializer_of_anon_3539(_4592);
    ??? _4593[32];
    initializer_of_anon_3566(_4593);
    ??? _4594[32];
    initializer_of_anon_3585(_4594);
    ??? _4595[31];
    initializer_of_anon_3602(_4595);
    ??? _4596[58];
    initializer_of_anon_3761(_4596);
    ??? _4597[58];
    initializer_of_anon_3782(_4597);
    ??? _4598[58];
    initializer_of_anon_3801(_4598);
    ??? _4599[58];
    initializer_of_anon_3820(_4599);
    t_vert(_4577, _4578, _4579, _4580, _4581, _4582, _4583, _4584, _4585, _4586, _4587, _4588, _4589, _4590, _4591, _4592, _4593, _4594, _4595, _4596, _4597, _4598, _4599);
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    t_position = stage_input.t_position;
    t_normal = stage_input.t_normal;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.t_vert_out_frag_pos = t_vert_out_frag_pos;
    stage_output.t_vert_out_normal = t_vert_out_normal;
    return stage_output;
}
